# see more details below
# http://nginx.org/en/docs/


user www-data;  # nginx worker process authority
worker_processes auto;  # nginx process count control
pid /run/nginx.pid; # nginx master process ID info

include /etc/nginx/modules-enabled/*.conf;

# nginx event config block
events {
        worker_connections 768;
        # multi_accept on;
}

# http config block
http {
    sendfile on;    # enables sendfile()
    tcp_nopush on;  # enables socket option(FreeBSD TCP_NOPUSH or Linux TCP_CORK) when sendfile is on
    tcp_nodelay on; # enables TCP_NODELAY option when keepalive is set

    keepalive_timeout 65;       # time to keep connection (0 for disabled)
    types_hash_max_size 2048;   # max hash table size

    # log files
    # (remove 'debug' in production)
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log debug;

    # gzip compression
    gzip on;

    # include mime.types configs
    include /etc/nginx/mime.types;
    default_type application/octet-stream;  # define default mime.type value

    # include configs
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    # upstream server   (server that provides service to another server)
    upstream UPSTREAM_NAME_HERE {
        server 127.0.0.1:8001;
    }

    # http-to-https redirection
    server {
        # port
        listen 80;
        listen [::]:80;

        # virtual host name
        # e.g. server_name example.com www.example.com
        server_name YOUR_DOMAIN_HERE;

        return 301 https://$host$request_uri;
    }

    # main server block
    server {
        # charset
        charset utf-8;

        # port
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        # virtual host name
        # e.g. server_name example.com www.example.com
        server_name YOUR_DOMAIN_HERE;

        # SSL certs location (letsencrypt & certbot, manual option)
        ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN_HERE/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN_HERE/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/YOUR_DOMAIN_HERE/fullchain.pem;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;


        # SSL protocols (see details below)
        # http://nginx.org/en/docs/http/ngx_http_ssl_module.html
        ssl_protocols TLSv1.2 TLSv1.3;          # TLSv1.3 requires nginx >= 1.13.0 (use TLSv1.2 if necessary)
        ssl_prefer_server_ciphers on;           # server ciphers should be preferred over client ciphers when using the SSLv3 and TLS protocols
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM;    # enabled ciphers
        ssl_ecdh_curve secp384r1;               # a curve for ECDHE ciphers (requires nginx >= 1.1.0)

        # types and sizes of caches that store session parameters
        # shared: cache shared between all worker processes
        # SSL: name for cache
        # 10m: cache size
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout  10m;   # time which a client may reuse the session parameters.
        ssl_session_tickets off;    # disable session resumption through TLS session tickets ()requires nginx >= 1.5.9)

        ssl_stapling on;            # enable stapling of OCSP responses by the server (requires nginx >= 1.3.7)
        ssl_stapling_verify on;     # enable verification of OCSP responses by the server (requires nginx => 1.3.7)


        # HSTS header setup (Strict-Transport-Security)
        # blocks MIMT(man in the middle) attack
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

        # disable page rendering in <frame>, <iframe>, or <object>
        # (for X-Frame-Options supported browsers only)
        add_header X-Frame-Options DENY;

        # disable styleSheet load when MIMETYPE does not correspond to text/css
        add_header X-Content-Type-Options nosniff;

        # stop page rendering when XSS attack is detected
        add_header X-XSS-Protection "1; mode=block";

        # resolver for DNS config of the upstream server
        resolver 8.8.8.8 8.8.4.4 valid=300s;    # Google DNS
        resolver_timeout 5s;

        # disable favicon error log
        location = /favicon.ico { access_log off; log_not_found off; }

        # request uri location
        location /LOCATION_NAME_HERE/ {
            proxy_pass http://UPSTREAM_NAME_HERE/;   # upstream server defined above
            server_name_in_redirect off;    # default is off (the name form the "Host" request header field is used)

            # redefine request header passed to the proxy server
            proxy_set_header Host $host;    # proxy the same host as was in server_name directive
            proxy_set_header Upgrade $http_upgrade; #
            proxy_set_header Connection $http_connection;   # controls whether or not the network connection stays open after the current transaction finishes

            # client IP address and IP addresses of proxies (or load balancers)
            # X-Forwarded-For: <client>, <proxy1>, <proxy2>
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header X-Forwarded-Proto $scheme;     # the protocol (HTTP or HTTPS) that a client used to connect to the proxy (or load balancer)
            proxy_set_header X-Real-IP $remote_addr;    # real client ip received into remote_addr
            proxy_set_header X-Real-Port $remote_port;  # real client port received into remote_addr
            proxy_set_header Referer $http_referer;     # identify where people are coming from

            # identification of the original host requested by the client in the 'Host' HTTP request header
            # XFH header determines which Host was originally used when host names and ports of reverse proxies may differ from the origin server handling the request
            proxy_set_header X-Forwarded-Host alfred.walker.duckdns.org;

            # The initial portion of the request URL's "path" that corresponds to the application object, so that the application knows its virtual "location".
            # This may be an empty string, if the application corresponds to the "root" of the server.
            proxy_set_header SCRIPT_NAME /UPSTREAM_NAME_HERE;

            proxy_http_version 1.1; # HTTP version for proxying (1.1 is recommended for use with keepalive connection)
            proxy_cache off;        # shared memory zone used for caching
            proxy_redirect off;     # the text in the “Location” and “Refresh” header fields of a proxied server response will not change.
            proxy_buffering off;    # nginx will not try to read the whole response from the proxied server when it is off.

            # request body is sent to the proxied server immediately as it is received
            # (the request cannot be passed to the 'next' upstream server if nginx already started sending the request body)
            proxy_request_buffering off;

            proxy_ignore_client_abort on;   # connection with a proxied server should be closed when a client closes the connection
            proxy_connect_timeout 7200;     # timeout for establishing a connection with a proxied server
            proxy_send_timeout 7200;        # timeout for transmitting a request to the proxied server
            client_max_body_size 0;         # max file upload size
        }
    }
}
